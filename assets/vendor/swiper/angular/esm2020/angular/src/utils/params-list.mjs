/* underscore in name -> watch for changes */
export const paramsList = [
    'init',
    'enabled',
    '_direction',
    'touchEventsTarget',
    'initialSlide',
    '_speed',
    'cssMode',
    'updateOnWindowResize',
    'resizeObserver',
    'nested',
    'focusableElements',
    '_width',
    '_height',
    'preventInteractionOnTransition',
    'userAgent',
    'url',
    '_edgeSwipeDetection',
    '_edgeSwipeThreshold',
    '_freeMode',
    '_autoHeight',
    'setWrapperSize',
    'virtualTranslate',
    '_effect',
    'breakpoints',
    '_spaceBetween',
    '_slidesPerView',
    'maxBackfaceHiddenSlides',
    '_grid',
    '_slidesPerGroup',
    '_slidesPerGroupSkip',
    '_centeredSlides',
    '_centeredSlidesBounds',
    '_slidesOffsetBefore',
    '_slidesOffsetAfter',
    'normalizeSlideIndex',
    '_centerInsufficientSlides',
    '_watchOverflow',
    'roundLengths',
    'touchRatio',
    'touchAngle',
    'simulateTouch',
    '_shortSwipes',
    '_longSwipes',
    'longSwipesRatio',
    'longSwipesMs',
    '_followFinger',
    'allowTouchMove',
    '_threshold',
    'touchMoveStopPropagation',
    'touchStartPreventDefault',
    'touchStartForcePreventDefault',
    'touchReleaseOnEdges',
    'uniqueNavElements',
    '_resistance',
    '_resistanceRatio',
    '_watchSlidesProgress',
    '_grabCursor',
    'preventClicks',
    'preventClicksPropagation',
    '_slideToClickedSlide',
    '_preloadImages',
    'updateOnImagesReady',
    '_loop',
    '_loopAdditionalSlides',
    '_loopedSlides',
    '_loopFillGroupWithBlank',
    'loopPreventsSlide',
    '_rewind',
    '_allowSlidePrev',
    '_allowSlideNext',
    '_swipeHandler',
    '_noSwiping',
    'noSwipingClass',
    'noSwipingSelector',
    'passiveListeners',
    'containerModifierClass',
    'slideClass',
    'slideBlankClass',
    'slideActiveClass',
    'slideDuplicateActiveClass',
    'slideVisibleClass',
    'slideDuplicateClass',
    'slideNextClass',
    'slideDuplicateNextClass',
    'slidePrevClass',
    'slideDuplicatePrevClass',
    'wrapperClass',
    'runCallbacksOnInit',
    'observer',
    'observeParents',
    'observeSlideChildren',
    // modules
    'a11y',
    'autoplay',
    '_controller',
    'coverflowEffect',
    'cubeEffect',
    'fadeEffect',
    'flipEffect',
    'creativeEffect',
    'cardsEffect',
    'hashNavigation',
    'history',
    'keyboard',
    'lazy',
    'mousewheel',
    '_navigation',
    '_pagination',
    'parallax',
    '_scrollbar',
    '_thumbs',
    'virtual',
    'zoom',
    'on',
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFyYW1zLWxpc3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9zcmMvYW5ndWxhci9zcmMvdXRpbHMvcGFyYW1zLWxpc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkNBQTZDO0FBQzdDLE1BQU0sQ0FBQyxNQUFNLFVBQVUsR0FBRztJQUN4QixNQUFNO0lBQ04sU0FBUztJQUNULFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsY0FBYztJQUNkLFFBQVE7SUFDUixTQUFTO0lBQ1Qsc0JBQXNCO0lBQ3RCLGdCQUFnQjtJQUNoQixRQUFRO0lBQ1IsbUJBQW1CO0lBQ25CLFFBQVE7SUFDUixTQUFTO0lBQ1QsZ0NBQWdDO0lBQ2hDLFdBQVc7SUFDWCxLQUFLO0lBQ0wscUJBQXFCO0lBQ3JCLHFCQUFxQjtJQUNyQixXQUFXO0lBQ1gsYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsU0FBUztJQUNULGFBQWE7SUFDYixlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLHlCQUF5QjtJQUN6QixPQUFPO0lBQ1AsaUJBQWlCO0lBQ2pCLHFCQUFxQjtJQUNyQixpQkFBaUI7SUFDakIsdUJBQXVCO0lBQ3ZCLHFCQUFxQjtJQUNyQixvQkFBb0I7SUFDcEIscUJBQXFCO0lBQ3JCLDJCQUEyQjtJQUMzQixnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLFlBQVk7SUFDWixZQUFZO0lBQ1osZUFBZTtJQUNmLGNBQWM7SUFDZCxhQUFhO0lBQ2IsaUJBQWlCO0lBQ2pCLGNBQWM7SUFDZCxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWiwwQkFBMEI7SUFDMUIsMEJBQTBCO0lBQzFCLCtCQUErQjtJQUMvQixxQkFBcUI7SUFDckIsbUJBQW1CO0lBQ25CLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsc0JBQXNCO0lBQ3RCLGFBQWE7SUFDYixlQUFlO0lBQ2YsMEJBQTBCO0lBQzFCLHNCQUFzQjtJQUN0QixnQkFBZ0I7SUFDaEIscUJBQXFCO0lBQ3JCLE9BQU87SUFDUCx1QkFBdUI7SUFDdkIsZUFBZTtJQUNmLHlCQUF5QjtJQUN6QixtQkFBbUI7SUFDbkIsU0FBUztJQUNULGlCQUFpQjtJQUNqQixpQkFBaUI7SUFDakIsZUFBZTtJQUNmLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLGtCQUFrQjtJQUNsQix3QkFBd0I7SUFDeEIsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsMkJBQTJCO0lBQzNCLG1CQUFtQjtJQUNuQixxQkFBcUI7SUFDckIsZ0JBQWdCO0lBQ2hCLHlCQUF5QjtJQUN6QixnQkFBZ0I7SUFDaEIseUJBQXlCO0lBQ3pCLGNBQWM7SUFDZCxvQkFBb0I7SUFDcEIsVUFBVTtJQUNWLGdCQUFnQjtJQUNoQixzQkFBc0I7SUFFdEIsVUFBVTtJQUNWLE1BQU07SUFDTixVQUFVO0lBQ1YsYUFBYTtJQUNiLGlCQUFpQjtJQUNqQixZQUFZO0lBQ1osWUFBWTtJQUNaLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixTQUFTO0lBQ1QsVUFBVTtJQUNWLE1BQU07SUFDTixZQUFZO0lBQ1osYUFBYTtJQUNiLGFBQWE7SUFDYixVQUFVO0lBQ1YsWUFBWTtJQUNaLFNBQVM7SUFDVCxTQUFTO0lBQ1QsTUFBTTtJQUNOLElBQUk7Q0FDTCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyogdW5kZXJzY29yZSBpbiBuYW1lIC0+IHdhdGNoIGZvciBjaGFuZ2VzICovXHJcbmV4cG9ydCBjb25zdCBwYXJhbXNMaXN0ID0gW1xyXG4gICdpbml0JyxcclxuICAnZW5hYmxlZCcsXHJcbiAgJ19kaXJlY3Rpb24nLFxyXG4gICd0b3VjaEV2ZW50c1RhcmdldCcsXHJcbiAgJ2luaXRpYWxTbGlkZScsXHJcbiAgJ19zcGVlZCcsXHJcbiAgJ2Nzc01vZGUnLFxyXG4gICd1cGRhdGVPbldpbmRvd1Jlc2l6ZScsXHJcbiAgJ3Jlc2l6ZU9ic2VydmVyJyxcclxuICAnbmVzdGVkJyxcclxuICAnZm9jdXNhYmxlRWxlbWVudHMnLFxyXG4gICdfd2lkdGgnLFxyXG4gICdfaGVpZ2h0JyxcclxuICAncHJldmVudEludGVyYWN0aW9uT25UcmFuc2l0aW9uJyxcclxuICAndXNlckFnZW50JyxcclxuICAndXJsJyxcclxuICAnX2VkZ2VTd2lwZURldGVjdGlvbicsXHJcbiAgJ19lZGdlU3dpcGVUaHJlc2hvbGQnLFxyXG4gICdfZnJlZU1vZGUnLFxyXG4gICdfYXV0b0hlaWdodCcsXHJcbiAgJ3NldFdyYXBwZXJTaXplJyxcclxuICAndmlydHVhbFRyYW5zbGF0ZScsXHJcbiAgJ19lZmZlY3QnLFxyXG4gICdicmVha3BvaW50cycsXHJcbiAgJ19zcGFjZUJldHdlZW4nLFxyXG4gICdfc2xpZGVzUGVyVmlldycsXHJcbiAgJ21heEJhY2tmYWNlSGlkZGVuU2xpZGVzJyxcclxuICAnX2dyaWQnLFxyXG4gICdfc2xpZGVzUGVyR3JvdXAnLFxyXG4gICdfc2xpZGVzUGVyR3JvdXBTa2lwJyxcclxuICAnX2NlbnRlcmVkU2xpZGVzJyxcclxuICAnX2NlbnRlcmVkU2xpZGVzQm91bmRzJyxcclxuICAnX3NsaWRlc09mZnNldEJlZm9yZScsXHJcbiAgJ19zbGlkZXNPZmZzZXRBZnRlcicsXHJcbiAgJ25vcm1hbGl6ZVNsaWRlSW5kZXgnLFxyXG4gICdfY2VudGVySW5zdWZmaWNpZW50U2xpZGVzJyxcclxuICAnX3dhdGNoT3ZlcmZsb3cnLFxyXG4gICdyb3VuZExlbmd0aHMnLFxyXG4gICd0b3VjaFJhdGlvJyxcclxuICAndG91Y2hBbmdsZScsXHJcbiAgJ3NpbXVsYXRlVG91Y2gnLFxyXG4gICdfc2hvcnRTd2lwZXMnLFxyXG4gICdfbG9uZ1N3aXBlcycsXHJcbiAgJ2xvbmdTd2lwZXNSYXRpbycsXHJcbiAgJ2xvbmdTd2lwZXNNcycsXHJcbiAgJ19mb2xsb3dGaW5nZXInLFxyXG4gICdhbGxvd1RvdWNoTW92ZScsXHJcbiAgJ190aHJlc2hvbGQnLFxyXG4gICd0b3VjaE1vdmVTdG9wUHJvcGFnYXRpb24nLFxyXG4gICd0b3VjaFN0YXJ0UHJldmVudERlZmF1bHQnLFxyXG4gICd0b3VjaFN0YXJ0Rm9yY2VQcmV2ZW50RGVmYXVsdCcsXHJcbiAgJ3RvdWNoUmVsZWFzZU9uRWRnZXMnLFxyXG4gICd1bmlxdWVOYXZFbGVtZW50cycsXHJcbiAgJ19yZXNpc3RhbmNlJyxcclxuICAnX3Jlc2lzdGFuY2VSYXRpbycsXHJcbiAgJ193YXRjaFNsaWRlc1Byb2dyZXNzJyxcclxuICAnX2dyYWJDdXJzb3InLFxyXG4gICdwcmV2ZW50Q2xpY2tzJyxcclxuICAncHJldmVudENsaWNrc1Byb3BhZ2F0aW9uJyxcclxuICAnX3NsaWRlVG9DbGlja2VkU2xpZGUnLFxyXG4gICdfcHJlbG9hZEltYWdlcycsXHJcbiAgJ3VwZGF0ZU9uSW1hZ2VzUmVhZHknLFxyXG4gICdfbG9vcCcsXHJcbiAgJ19sb29wQWRkaXRpb25hbFNsaWRlcycsXHJcbiAgJ19sb29wZWRTbGlkZXMnLFxyXG4gICdfbG9vcEZpbGxHcm91cFdpdGhCbGFuaycsXHJcbiAgJ2xvb3BQcmV2ZW50c1NsaWRlJyxcclxuICAnX3Jld2luZCcsXHJcbiAgJ19hbGxvd1NsaWRlUHJldicsXHJcbiAgJ19hbGxvd1NsaWRlTmV4dCcsXHJcbiAgJ19zd2lwZUhhbmRsZXInLFxyXG4gICdfbm9Td2lwaW5nJyxcclxuICAnbm9Td2lwaW5nQ2xhc3MnLFxyXG4gICdub1N3aXBpbmdTZWxlY3RvcicsXHJcbiAgJ3Bhc3NpdmVMaXN0ZW5lcnMnLFxyXG4gICdjb250YWluZXJNb2RpZmllckNsYXNzJyxcclxuICAnc2xpZGVDbGFzcycsXHJcbiAgJ3NsaWRlQmxhbmtDbGFzcycsXHJcbiAgJ3NsaWRlQWN0aXZlQ2xhc3MnLFxyXG4gICdzbGlkZUR1cGxpY2F0ZUFjdGl2ZUNsYXNzJyxcclxuICAnc2xpZGVWaXNpYmxlQ2xhc3MnLFxyXG4gICdzbGlkZUR1cGxpY2F0ZUNsYXNzJyxcclxuICAnc2xpZGVOZXh0Q2xhc3MnLFxyXG4gICdzbGlkZUR1cGxpY2F0ZU5leHRDbGFzcycsXHJcbiAgJ3NsaWRlUHJldkNsYXNzJyxcclxuICAnc2xpZGVEdXBsaWNhdGVQcmV2Q2xhc3MnLFxyXG4gICd3cmFwcGVyQ2xhc3MnLFxyXG4gICdydW5DYWxsYmFja3NPbkluaXQnLFxyXG4gICdvYnNlcnZlcicsXHJcbiAgJ29ic2VydmVQYXJlbnRzJyxcclxuICAnb2JzZXJ2ZVNsaWRlQ2hpbGRyZW4nLFxyXG5cclxuICAvLyBtb2R1bGVzXHJcbiAgJ2ExMXknLFxyXG4gICdhdXRvcGxheScsXHJcbiAgJ19jb250cm9sbGVyJyxcclxuICAnY292ZXJmbG93RWZmZWN0JyxcclxuICAnY3ViZUVmZmVjdCcsXHJcbiAgJ2ZhZGVFZmZlY3QnLFxyXG4gICdmbGlwRWZmZWN0JyxcclxuICAnY3JlYXRpdmVFZmZlY3QnLFxyXG4gICdjYXJkc0VmZmVjdCcsXHJcbiAgJ2hhc2hOYXZpZ2F0aW9uJyxcclxuICAnaGlzdG9yeScsXHJcbiAgJ2tleWJvYXJkJyxcclxuICAnbGF6eScsXHJcbiAgJ21vdXNld2hlZWwnLFxyXG4gICdfbmF2aWdhdGlvbicsXHJcbiAgJ19wYWdpbmF0aW9uJyxcclxuICAncGFyYWxsYXgnLFxyXG4gICdfc2Nyb2xsYmFyJyxcclxuICAnX3RodW1icycsXHJcbiAgJ3ZpcnR1YWwnLFxyXG4gICd6b29tJyxcclxuICAnb24nLFxyXG5dO1xyXG4iXX0=